{"version":3,"file":"static/js/161.50657abf.chunk.js","mappings":"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","sources":["MoviesApi/MoviesApi.js","webpack://react-homework-template/./src/components/FindFilm/findFilm.module.scss?bdb4","components/FindFilm/FindFilm.jsx","webpack://react-homework-template/./src/components/FindFilmList/findFilmList.module.scss?2469","components/FindFilmList/FindFilmList.jsx","webpack://react-homework-template/./src/components/SearchForm/searchForm.module.scss?0049","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'd178e473a587fbce7658ca70e872c0b4',\n  },\n});\nconst getTrending = async params => {\n  const { data } = await moviesApi.get('trending/movie/day', {\n    params,\n  });\n  return data;\n};\nconst searchMovies = async params => {\n  const { data } = await moviesApi.get('search/movie', {\n    params,\n  });\n  return data;\n};\nconst getMovieById = async (id, params) => {\n  const { data } = await moviesApi.get(`movie/${id}`, {\n    params,\n  });\n  return data;\n};\nconst getCastById = async (movie_id, params) => {\n  const { data } = await moviesApi.get(`movie/${movie_id}/credits`, {\n    params,\n  });\n  return data;\n};\nconst getReviewById = async (movie_id, params) => {\n  const { data } = await moviesApi.get(`movie/${movie_id}/reviews`, {\n    params,\n  });\n  return data;\n};\nexport { getTrending, searchMovies, getMovieById, getCastById, getReviewById };\n","// extracted by mini-css-extract-plugin\nexport default {\"listFilmsItem\":\"findFilm_listFilmsItem__IUGs8\"};","import css from './findFilm.module.scss'\n\nconst FilmSearch = ({ film }) => {\n    let filmName = null;\n  try {\n    filmName = film.original_title.toLowerCase();\n    if (filmName === '' || filmName === undefined) {\n      filmName = film.name;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return <li className={css.listFilmsItem} id={film.id}>{filmName}</li>;\n};\nexport default FilmSearch;\n","// extracted by mini-css-extract-plugin\nexport default {\"listFilms\":\"findFilmList_listFilms__E55Aa\",\"listFilmsTitle\":\"findFilmList_listFilmsTitle__wPiWl\"};","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport FilmSearch from '../FindFilm/FindFilm';\nimport css from './findFilmList.module.scss';\n\nconst FilmList = ({ path, title, listFilms }) => {\n  const location = useLocation();\n  console.log(listFilms);\n\n  return (\n    <ul className={css.listFilms}>\n      <h1 className={css.listFilmsTitle}>{title}</h1>\n      {listFilms.map(film => (\n        <Link\n          to={`/${path}${film.id}`}\n          key={film.id}\n          state={{ from: location }}\n        >\n          <FilmSearch key={film.id} film={film} />\n        </Link>\n      ))}\n    </ul>\n  );\n};\n\nexport default FilmList;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"searchForm_searchForm__GOgD+\",\"searchFormInput\":\"searchForm_searchFormInput__wzVvy\",\"searchFormButton\":\"searchForm_searchFormButton__ER03x\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './searchForm.module.scss';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form className={css.searchForm} onSubmit={handleSubmit}>\n\n<input \n          onChange={handleChange}                 \n          name=\"searchQuery\"\n          className={css.searchFormInput}\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Write a query\"\n\n        />\n        <button type=\"submit\" className={css.searchFormButton}>\n            Search\n        </button>\n\n    </form>\n  )\n};\nSearchForm.propTypes = {onSubmit: PropTypes.func};\nexport default SearchForm;","import  SearchForm  from 'components/SearchForm/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'MoviesApi/MoviesApi';\nimport  FilmList  from 'components/FindFilmList/FindFilmList';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  \n  const [searchParams, setSearchParams] = useSearchParams();\n  let query = searchParams.get('query');\n\n  useEffect(() => {\n    if(!query){return}\n    const fetchData = async () => {\n      try {\n        const {results} = await searchMovies({query});\n        setFilms(results);\n        if (results.length === 0 && query !== '') {\n          Notify.failure(\n            'Sorry, there are no films matching your search query. Please try again.'\n          );\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [query]);\n  \n\n  const onSubmitSearchForm = filterForm => {\n    setSearchParams({query: filterForm});\n    setFilms([]);\n    \n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={onSubmitSearchForm} />\n      <FilmList title={''} path=\"movies/\" listFilms={films} query={query} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["moviesApi","axios","baseURL","params","api_key","getTrending","get","data","searchMovies","getMovieById","id","getCastById","movie_id","getReviewById","film","filmName","original_title","toLowerCase","undefined","name","error","console","log","className","css","path","title","listFilms","location","useLocation","map","to","state","from","onSubmit","useState","query","setQuery","e","preventDefault","onChange","target","value","type","autoComplete","autoFocus","placeholder","films","setFilms","useSearchParams","searchParams","setSearchParams","useEffect","fetchData","results","length","Notify","filterForm"],"sourceRoot":""}