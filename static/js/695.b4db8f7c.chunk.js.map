{"version":3,"file":"static/js/695.b4db8f7c.chunk.js","mappings":"sSAEMA,E,OAAYC,EAAAA,OAAa,CAC7BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAGPC,EAAW,mCAAG,WAAMF,GAAN,yFACKH,EAAUM,IAAI,qBAAsB,CACzDH,OAAAA,IAFgB,uBACVI,EADU,EACVA,KADU,kBAIXA,GAJW,2CAAH,sDAMXC,EAAY,mCAAG,WAAML,GAAN,yFACIH,EAAUM,IAAI,eAAgB,CACnDH,OAAAA,IAFiB,uBACXI,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,sDAMZE,EAAY,mCAAG,WAAOC,EAAIP,GAAX,yFACIH,EAAUM,IAAV,gBAAuBI,GAAM,CAClDP,OAAAA,IAFiB,uBACXI,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,wDAMZI,EAAW,mCAAG,WAAOD,EAAIP,GAAX,yFACKH,EAAUM,IAAV,gBAAuBI,EAAvB,YAAqC,CAC1DP,OAAAA,IAFgB,uBACVI,EADU,EACVA,KADU,kBAIXA,GAJW,2CAAH,wDAMXK,EAAa,mCAAG,WAAOF,EAAIP,GAAX,yFACGH,EAAUM,IAAV,gBAAuBI,EAAvB,YAAqC,CAC1DP,OAAAA,IAFkB,uBACZI,EADY,EACZA,KADY,kBAIbA,GAJa,2CAAH,uD,6HC/BnB,GAAiB,E,kBCmCjB,EA/BgB,WACd,OAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQL,GAAOM,EAAAA,EAAAA,MAAPN,GAcR,OAZAO,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMN,EAAAA,EAAAA,IAAcF,GAFpB,OAEXS,EAFW,OAGjBJ,EAAWI,EAASZ,MAHH,gDAKjBa,QAAQC,IAAR,MALiB,yDAAH,qDAQlBH,GACD,GAAE,CAACR,KAGF,eAAIY,UAAWC,EAAAA,QAAf,SACGT,EAAQU,OAAS,EAChBV,EAAQW,KAAI,SAAAC,GAAM,OAChB,gBAAIJ,UAAWC,EAAAA,QAAf,WACE,kBAAMD,UAAWC,EAAAA,MAAjB,oBAAoCG,EAAOC,OAA3C,QACA,cAAGL,UAAU,oBAAb,SAAkCI,EAAOE,YAFVF,EAAOhB,GADxB,KAOlB,gEAIP,C","sources":["MoviesApi/MoviesApi.js","components/Reviews/reviews.module.scss","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'd178e473a587fbce7658ca70e872c0b4',\n  },\n});\nconst getTrending = async params => {\n  const { data } = await moviesApi.get('trending/movie/day', {\n    params,\n  });\n  return data;\n};\nconst searchMovies = async params => {\n  const { data } = await moviesApi.get('search/movie', {\n    params,\n  });\n  return data;\n};\nconst getMovieById = async (id, params) => {\n  const { data } = await moviesApi.get(`movie/${id}`, {\n    params,\n  });\n  return data;\n};\nconst getCastById = async (id, params) => {\n  const { data } = await moviesApi.get(`movie/${id}/credits`, {\n    params,\n  });\n  return data;\n};\nconst getReviewById = async (id, params) => {\n  const { data } = await moviesApi.get(`movie/${id}/reviews`, {\n    params,\n  });\n  return data;\n};\nexport { getTrending, searchMovies, getMovieById, getCastById, getReviewById };\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { getReviewById } from '../../MoviesApi/MoviesApi';\nimport css from './reviews.module.scss';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await getReviewById(id);\n        setReviews(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <ul className={css.reviews}>\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <li className={css.reviews} key={review.id}>\n            <span className={css.autor}>Autor: {review.author}.</span>\n            <p className=\"{css.rev_content}\">{review.content}</p>\n          </li>\n        ))\n      ) : (\n        <span>Sorry, we don't have any reviews</span>\n      )}\n    </ul>\n  );\n};\nexport default Reviews;\n"],"names":["moviesApi","axios","baseURL","params","api_key","getTrending","get","data","searchMovies","getMovieById","id","getCastById","getReviewById","useState","reviews","setReviews","useParams","useEffect","fetchReviews","response","console","log","className","css","length","map","review","author","content"],"sourceRoot":""}