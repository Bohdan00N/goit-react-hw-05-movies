{"version":3,"file":"static/js/466.7824874c.chunk.js","mappings":"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","sources":["MoviesApi/MoviesApi.js","webpack://react-homework-template/./src/components/MovieInfo/movieInfo.module.scss?c6d5","components/MovieInfo/MovieInfo.jsx","webpack://react-homework-template/./src/components/MovieItem/movieItem.module.scss?3516","components/MovieItem/MovieItem.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'd178e473a587fbce7658ca70e872c0b4',\n  },\n});\nconst getTrending = async params => {\n  const { data } = await moviesApi.get('trending/movie/day', {\n    params,\n  });\n  return data;\n};\nconst searchMovies = async params => {\n  const { data } = await moviesApi.get('search/movie', {\n    params,\n  });\n  return data;\n};\nconst getMovieById = async (id, params) => {\n  const { data } = await moviesApi.get(`movie/${id}`, {\n    params,\n  });\n  return data;\n};\nconst getCastById = async (movie_id, params) => {\n  const { data } = await moviesApi.get(`movie/${movie_id}/credits`, {\n    params,\n  });\n  return data;\n};\nconst getReviewById = async (movie_id, params) => {\n  const { data } = await moviesApi.get(`movie/${movie_id}/reviews`, {\n    params,\n  });\n  return data;\n};\nexport { getTrending, searchMovies, getMovieById, getCastById, getReviewById };\n","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"movieInfo_info__t05kb\"};","import css from './movieInfo.module.scss'\nimport { Link } from \"react-router-dom\";\n\nexport const MovieInfo = ({listTitle, location}) => {       \n    return (\n        <ul className={css.info}>{listTitle}\n            <li>\n                <Link to=\"cast\" state={{ from: location }}>Cast</Link>         \n            </li>                              \n            <li>\n                <Link to=\"reviews\" state={{ from: location }}>Reviews</Link>   \n            </li>                                        \n        </ul>                                                                                    \n    )     \n  }","// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"movieItem_movieItem__ptlEg\",\"movieInfoContainer\":\"movieItem_movieInfoContainer__uZzgd\",\"moviePoster\":\"movieItem_moviePoster__dHFhG\",\"movieInfo\":\"movieItem_movieInfo__zaNNh\",\"movieNotes\":\"movieItem_movieNotes__-W1o4\",\"movieNotesItem\":\"movieItem_movieNotesItem__fWzQm\",\"btnBack\":\"movieItem_btnBack__gt1z-\"};","import { Link } from 'react-router-dom';\nimport css from './movieItem.module.scss';\n\nexport const MovieItem = ({\n  location,\n  posterPath,\n  title,\n  popularity,\n  overview,\n  genres,\n}) => {\n  return (\n    <div className={css.movieItem}>\n      <Link to={location} className={css.goBack}>\n        <button className={css.btnBack}>Go back</button>\n      </Link>\n      <div className={css.movieInfoContainer}>\n        <img\n          className={css.moviePoster}\n          src={`https://image.tmdb.org/t/p/original${posterPath}`}\n          alt={title}\n          width=\"400\"\n          height=\"600\"\n          loading=\"lazy\"\n        />\n        <div className={css.movieInfo}>\n          <h1 className={css.movieNotes}>{title}</h1>\n          <p className={css.movieNotesItem}>User score:{popularity}%</p>\n          <h2 className={css.movieNotes}>Overview</h2>\n          <p className={css.movieNotesItem}>{overview}</p>\n          <h2 className={css.movieNotes}>Genres</h2>\n          <p className={css.movieNotesItem}>{genres}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {getMovieById} from '../MoviesApi/MoviesApi';\nimport { Notify } from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { Outlet,useParams, useLocation } from 'react-router-dom';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { Suspense } from 'react';\n\nconst MovieDetails = () => {\nconst { movieId } = useParams();\nconst location = useLocation();\nconst [title, setTitle] = useState(\"\");\nconst [poster, setPoster] = useState(\"\");\nconst [overview, setOverview] = useState(\"\");\nconst [genres, setGenres] = useState('');\nconst [popularity, setPopularity] = useState('');\nconst back = location.state?.from ?? \"/movies\";\n\n\nuseEffect(() => {\n    const MovieDetails = async () => {\n        try {\n        const response = await getMovieById(movieId);\n        console.log(response);\n        \n        setTitle(response.title);\n        setPoster(response.poster_path);    \n        setOverview(response.overview);\n        setGenres(response.genres.map(genre=>genre.name).join(\", \"));\n        setPopularity(response.vote_average*10);\n \n        if(response === undefined) {\n        Notify.failure('Sorry, there is no information about this movie')\n        }\n        } catch (error) {\n        console.log(error);\n        }\n        }\n        MovieDetails();\n}, [movieId]);\n\nreturn (\n    <>\n     <MovieItem title={title} posterPath={poster} popularity={popularity} overview={overview} genres={genres} location={back} />          \n            <MovieInfo listTitle=\"Information\" location={back}/> \n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />    \n            </Suspense>   \n    \n    </>\n)\n}\nexport default MovieDetails;"],"names":["moviesApi","axios","baseURL","params","api_key","getTrending","get","data","searchMovies","getMovieById","id","getCastById","movie_id","getReviewById","MovieInfo","listTitle","location","className","css","to","state","from","MovieItem","posterPath","title","popularity","overview","genres","src","alt","width","height","loading","movieId","useParams","useLocation","useState","setTitle","poster","setPoster","setOverview","setGenres","setPopularity","back","useEffect","MovieDetails","response","console","log","poster_path","map","genre","name","join","vote_average","undefined","Notify","Suspense","fallback"],"sourceRoot":""}