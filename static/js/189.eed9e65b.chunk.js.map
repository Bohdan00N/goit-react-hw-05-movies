{"version":3,"file":"static/js/189.eed9e65b.chunk.js","mappings":"sSAEMA,E,OAAYC,EAAAA,OAAa,CAC7BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAGPC,EAAW,mCAAG,WAAMF,GAAN,yFACKH,EAAUM,IAAI,qBAAsB,CACzDH,OAAAA,IAFgB,uBACVI,EADU,EACVA,KADU,kBAIXA,GAJW,2CAAH,sDAMXC,EAAY,mCAAG,WAAML,GAAN,yFACIH,EAAUM,IAAI,eAAgB,CACnDH,OAAAA,IAFiB,uBACXI,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,sDAMZE,EAAY,mCAAG,WAAOC,EAAIP,GAAX,yFACIH,EAAUM,IAAV,gBAAuBI,GAAM,CAClDP,OAAAA,IAFiB,uBACXI,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,wDAMZI,EAAW,mCAAG,WAAOD,EAAIP,GAAX,yFACKH,EAAUM,IAAV,gBAAuBI,EAAvB,YAAqC,CAC1DP,OAAAA,IAFgB,uBACVI,EADU,EACVA,KADU,kBAIXA,GAJW,2CAAH,wDAMXK,EAAa,mCAAG,WAAOF,EAAIP,GAAX,yFACGH,EAAUM,IAAV,gBAAuBI,EAAvB,YAAqC,CAC1DP,OAAAA,IAFkB,uBACZI,EADY,EACZA,KADY,kBAIbA,GAJa,2CAAH,uD,sIC/BnB,GAAiB,E,SCwDjB,EApDa,WACX,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KA2BA,OAZEC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAESR,EAAAA,EAAAA,IAAYE,GAFrB,OAERO,EAFQ,OAGNC,EAASD,EAASb,KAAlBc,KACRJ,EAAQI,GAJM,gDAMdC,QAAQC,IAAR,MANc,yDAAH,qDASfJ,GACD,GAAE,CAACN,KAEJ,gBAAKW,UAAWC,EAAAA,KAAhB,SACGT,EAAKU,OAAS,EACbV,EAAKW,KAAI,SAAAC,GAAK,OACZ,iBAAKJ,UAAWC,EAAAA,MAAhB,WACE,gBACED,UAAWC,EAAAA,SACXI,IAAG,6CAAwCD,EAAME,cACjDC,IAAKH,EAAMI,KACXC,QAAQ,OACRC,MAAM,MACNC,OAAO,SAET,uBAAIP,EAAMI,QACV,eAAGR,UAAWC,EAAAA,SAAd,wBAAwCG,EAAMQ,eAVhBR,EAAMS,UAD1B,KAed,8DAIP,C","sources":["MoviesApi/MoviesApi.js","components/Cast/cast.module.scss","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'd178e473a587fbce7658ca70e872c0b4',\n  },\n});\nconst getTrending = async params => {\n  const { data } = await moviesApi.get('trending/movie/day', {\n    params,\n  });\n  return data;\n};\nconst searchMovies = async params => {\n  const { data } = await moviesApi.get('search/movie', {\n    params,\n  });\n  return data;\n};\nconst getMovieById = async (id, params) => {\n  const { data } = await moviesApi.get(`movie/${id}`, {\n    params,\n  });\n  return data;\n};\nconst getCastById = async (id, params) => {\n  const { data } = await moviesApi.get(`movie/${id}/credits`, {\n    params,\n  });\n  return data;\n};\nconst getReviewById = async (id, params) => {\n  const { data } = await moviesApi.get(`movie/${id}/reviews`, {\n    params,\n  });\n  return data;\n};\nexport { getTrending, searchMovies, getMovieById, getCastById, getReviewById };\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect} from 'react';\nimport { getCastById } from 'MoviesApi/MoviesApi';\nimport { useParams } from 'react-router-dom';\nimport css from './cast.module.scss';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n//   const fetchCast = useCallback(\n//     async () => {\n//     try {\n//       const response = await getCastById(movieId);\n//       const { Cast } = response.data;\n//       setCast(Cast);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   },[movieId]);\n//    useEffect(() => {\n//     fetchCast();\n//   }, [fetchCast]);\n    useEffect(() => {\n      const fetchCast = async () => {\n        try {\n          const response = await getCastById(movieId);\n          const { Cast } = response.data;\n          setCast(Cast);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      fetchCast();\n    }, [movieId]);\n  return (\n    <div className={css.cast}>\n      {cast.length > 0 ? (\n        cast.map(actor => (\n          <div className={css.actor} key={actor.credir_id}>\n            <img\n              className={css.actorImg}\n              src={`https://image.tmdb.org/t/p/original${actor.profile_path}`}\n              alt={actor.name}\n              loading=\"lazy\"\n              width=\"100\"\n              height=\"150\"\n            />\n            <p>{actor.name}</p>\n            <p className={css.actorImg}>Character: {actor.character}</p>\n          </div>\n        ))\n      ) : (\n        <span>Sorry, we don't have any casts</span>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["moviesApi","axios","baseURL","params","api_key","getTrending","get","data","searchMovies","getMovieById","id","getCastById","getReviewById","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","response","Cast","console","log","className","css","length","map","actor","src","profile_path","alt","name","loading","width","height","character","credir_id"],"sourceRoot":""}